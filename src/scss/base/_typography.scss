// typographie
@use "fonts" as f;
@use "color" as c;
@use "shadows" as sh;
@use "font-sizes" as s;

@mixin menu() {
  font-size: map-get(s.$font-sizes, menu-font);
  color: map-get(map-get(c.$color, "solid-colors"), c-light);
  font-family: map-get(
    map-get(f.$path-fonts-formats, "family-font"),
    "menu-font"
  );
  text-decoration: none;
  text-transform: uppercase;
}

@mixin heading() {
  font-size: map-get(map-get(s.$font-sizes, "headings"), main-heading);
  color: map-get(map-get(c.$color, "solid-colors"), "c-light");
  font-family: map-get(
    map-get(f.$path-fonts-formats, "family-font"),
    "h1-font"
  );
  text-shadow: map-get(map-get(sh.$shadows, "texts"), "h1-shadow");
}

@mixin button() {
  color: map-get(map-get(c.$color, "solid-colors"), c-light);
  font-size: map-get(map-get(s.$font-sizes, "other-texts"), text-button);
  font-family: map-get(
    map-get(f.$path-fonts-formats, "family-font"),
    button-font
  );
  text-decoration: none;
  border-style: none;
  text-transform: uppercase;
}

@mixin title-section() {
  font-size: map-get(map-get(s.$font-sizes, "headings"), title-main-cards);
  color: map-get(map-get(c.$color, "solid-colors"), "c-dark");
  font-family: map-get(
    map-get(f.$path-fonts-formats, "family-font"),
    "h2-font"
  );
  letter-spacing: map-get(
    map-get(s.$font-spaces, "letter-spacings"),
    ls-title-main-cards
  );
  text-transform: uppercase;
}

@mixin desc-section() {
  font-size: map-get(map-get(s.$font-sizes, "other-texts"), p-in-cards);
  color: map-get(map-get(c.$color, "solid-colors"), c-light);
  font-family: map-get(
    map-get(f.$path-fonts-formats, "family-font"),
    "paragraph-font"
  );
  text-shadow: map-get(map-get(sh.$shadows, texts), sh-desc-section);
  text-transform: uppercase;
}

@mixin testimony-title() {
  font-size: map-get(map-get(s.$font-sizes, "headings"), title-main-cards);
  color: map-get(map-get(c.$color, "solid-colors"), "c-dark");
  font-family: map-get(
    map-get(f.$path-fonts-formats, "family-font"),
    "h2-font"
  );

  letter-spacing: map-get(
    map-get(s.$font-spaces, "letter-spacings"),
    ls-title-testimony
  );
}

@mixin testimony-title() {
  font-family: map-get(map-get(f.$path-fonts-formats, "family-font"), h3-font);
  font-size: map-get(
    map-get(s.$font-sizes, "other-texts"),
    name-testimony-user
  );

  text-transform: uppercase;
}

@mixin ia-animal() {
  text-transform: uppercase;
  font-size: map-get(map-get(s.$font-sizes, "headings"), titles-cards-animal);
  font-family: map-get(map-get(f.$path-fonts-formats, "family-font"), h2-font);
}

@mixin oo-animal() {
  font-family: map-get(map-get(f.$path-fonts-formats, "family-font"), h3-font);

  text-transform: capitalize;
  font-size: calc(
    map-get(map-get(s.$font-sizes, "headings"), titles-cards-animal) - 0.2rem
  );
}

@mixin pagination() {
  font-size: calc(
    map-get(map-get(s.$font-sizes, "other-texts"), name-testimony-user) - 0.4rem
  );

  text-decoration: none;
}

@mixin ad-description() {
  font-size: calc(
    map-get(map-get(s.$font-sizes, "other-texts"), request-info-data-card) -
      0.2rem
  );
  font-family: map-get(
    map-get(f.$path-fonts-formats, "family-font"),
    paragraph-font
  );
}

// typographie
html,
body {
  font-family: map-get(
    map-get(f.$path-fonts-formats, "family-font"),
    normal-font
  );
}

// nav style typography
.nav {
  // background-color: map-get(map-get(c.$color, solid-colors), c-bg-contact);

  &__link {
    // font-size: map-get(s.$font-sizes, menu-font);
    // color: map-get(map-get(c.$color, "solid-colors"), c-light);
    // font-family: map-get(map-get(f.$path-fonts-formats, "family-font"), "menu-font");

    @include menu();

    &--active,
    &:hover {
      color: map-get(
        map-get(c.$color, "solid-colors"),
        "c-hgl-hover"
      ); // Amarillo
      font-family: map-get(
        map-get(f.$path-fonts-formats, "family-font"),
        h2-font
      );
    }
  }
}
// nav style typography

.navbar-toggler-icon {
  font-size: map-get(map-get(s.$font-sizes, "headings"), bars);
}

// main h1 style typography
.hero {
  font-size: unset;

  &__title,
  &__subtitle {
    @include heading();
  }

  &__subtitle {
    line-height: map-get(
      map-get(s.$font-spaces, "line-heights"),
      lh-p-main-heading
    ); /* 148.923% */
    letter-spacing: map-get(
      map-get(s.$font-spaces, "letter-spacings"),
      ls-p-main-heading
    );
  }
}
// main h1 style typography

// all buttons
.intro__button {
  @include button();

  // button from header redirecting to footer
  &--hours {
    background-color: map-get(
      map-get(c.$color, "solid-colors"),
      c-button-footer
    );

    &:hover {
      filter: invert(1);
      background-color: map-get(
        map-get(c.$color, "solid-colors"),
        c-button-footer
      );
      -webkit-filter: invert(1);
      color: map-get(map-get(c.$color, "solid-colors"), c-light);
    }
  }
  // button from header redirecting to footer

  // button form send
  &--send {
    background-color: map-get(map-get(c.$color, "solid-colors"), c-highlight-2);
    color: map-get(map-get(c.$color, "solid-colors"), c-dark);

    &:hover {
      color: map-get(map-get(c.$color, "solid-colors"), c-dark);
      filter: invert(1);
      background-color: map-get(
        map-get(c.$color, "solid-colors"),
        c-highlight-2
      );
      -webkit-filter: invert(1);
    }
  }
  // button form send

  // button more info
  &--more {
    background-color: map-get(map-get(c.$color, "solid-colors"), c-button-more);
    &:hover {
      color: map-get(map-get(c.$color, "solid-colors"), c-light);
      background-color: map-get(
        map-get(c.$color, "solid-colors"),
        c-button-more
      );
      filter: invert(1);
      -webkit-filter: invert(1);
    }
  }
  // button more info
}
// all buttons

// main section with cards
.intro {
  // titles cards

  &__link {
    text-decoration: none;
    color: map-get(map-get(c.$color, "solid-colors"), "c-dark");
  }

  &__title {
    @include title-section();
  }
  // titles cards

  // paraph in cards
  &__description {
    @include desc-section();
  }
  // paraph in cards

  &__name {
    letter-spacing: map-get(
      map-get(s.$font-spaces, letter-spacings),
      ls-title-testimony
    );
    font-size: map-get(map-get(s.$font-sizes, "headings"), name-animal);

    & ~ * {
      font-size: map-get(map-get(s.$font-sizes, "other-texts"), rest-animal);
      margin: unset;
    }
  }
}
// main section with cards

// pagination

.pagination {
  &__link,
  &__link ~ span {
    @include pagination();
  }
}

// pagination

// section testimony
.testimony {
  // title testimony
  &__title {
    @include testimony-title();

    &--shown {
      text-transform: uppercase;
    }

    &--feedback {
      text-transform: capitalize;
    }
  }
  // title testimony

  // user pseudo name
  &__user {
    @include testimony-title();
  }
  // user pseudo name

  // stars in testimony
  &__rating {
    font-size: map-get(
      map-get(s.$font-sizes, "other-texts"),
      name-testimony-user
    );
  }
  // stars in testimony

  // paragraph testimony
  &__text {
    font-size: map-get(map-get(s.$font-sizes, "other-texts"), p-testimony);
  }
  // paragraph testimony

  &__stars,
  &__label {
    font-size: map-get(map-get(s.$font-sizes, "other-texts"), filter-form);
  }

  &__input,
  &__textarea {
    font-size: calc(
      map-get(map-get(s.$font-sizes, "other-texts"), filter-form) - 0.2rem
    );

    &::placeholder {
      color: grey;
      font-size: calc(
        map-get(map-get(s.$font-sizes, "other-texts"), filter-form) - 0.2rem
      );
    }
  }
}

// section testimony

// body write testimony
// section write testimony

// footer
.footer {
  &__location-details > p {
    font-size: calc(
      map-get(map-get(s.$font-sizes, "other-texts"), p-testimony) + 0.2rem
    );
  }

  &__location-details + p {
    font-size: map-get(map-get(s.$font-sizes, "other-texts"), p-testimony);
  }

  &__hours-table {
    font-size: map-get(map-get(s.$font-sizes, "footer-texts"), f-tertiary);
  }

  &__copyright > small {
    font-size: map-get(map-get(s.$font-sizes, "footer-texts"), f-copy);
  }
  
}

.filter {
  font-size: map-get(map-get(s.$font-sizes, headings), filter-headings);

  &__legend ~ label,
  &__legend ~ input {
    font-size: map-get(map-get(s.$font-sizes, other-texts), filter-form);
  }

  &__fieldset select option {
    font-size: calc(
      map-get(map-get(s.$font-sizes, other-texts), filter-form) - 0.2rem
    );
  }

  &__legend ~ select {
    font-size: calc(
      map-get(map-get(s.$font-sizes, other-texts), filter-form) - 0.2rem
    );
  }
}

.contact {
  &__form-section {
    font-size: map-get(map-get(s.$font-sizes, other-texts), filter-form);
  }
}

.animal {
  &__info > h2,
  &__about > h2 {
    @include ia-animal();
  }

  &__observation > h2,
  &__optional > h2 {
    @include oo-animal();
  }

  &__description {
    @include ad-description();
  }

  .animal__header,
  .animal__data {
    font-size: map-get(
      map-get(s.$font-sizes, "other-texts"),
      request-info-data-card
    );
  }
}
